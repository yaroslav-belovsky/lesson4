import customtkinter as ctk
import requests

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å—É –∑ CoinGecko API
def get_exchange_rates():
    url = "https://api.coingecko.com/api/v3/simple/price"
    params = {
        "ids": "bitcoin,ethereum,tether",
        "vs_currencies": "uah"
    }
    try:
        response = requests.get(url, params=params)
        data = response.json()
        print("üìä –ê–∫—Ç—É–∞–ª—å–Ω—ñ –∫—É—Ä—Å–∏:")
        print(f"BTC ‚Üí UAH: {data['bitcoin']['uah']}")
        print(f"ETH ‚Üí UAH: {data['ethereum']['uah']}")
        print(f"USDT ‚Üí UAH: {data['tether']['uah']}")
        print("UAH: 1")
        return {
            "BTC": data["bitcoin"]["uah"],
            "ETH": data["ethereum"]["uah"],
            "USDT": data["tether"]["uah"],
            "UAH": 1.0  # –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
        }
    except Exception as e:
        print("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫—É—Ä—Å—É:", e)
        return {
            "BTC": 0,
            "ETH": 0,
            "USDT": 0,
            "UAH": 1
        }

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–∫–Ω–∞
app = ctk.CTk()
app.title("–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç")
app.geometry("400x300")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
title_label = ctk.CTkLabel(app, text="–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç", font=("Roboto", 18))
title_label.pack(pady=10)

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥—É —Å—É–º–∏
entry_amount = ctk.CTkEntry(app, placeholder_text="–í–≤–µ–¥–∏ —Å—É–º—É")
entry_amount.pack(pady=10)

# –í–∏–±—ñ—Ä –≤–∞–ª—é—Ç
from_currency_var = ctk.StringVar(value="BTC")
from_currency_menu = ctk.CTkOptionMenu(app, variable=from_currency_var, values=["BTC", "ETH", "USDT", "UAH"])
from_currency_menu.pack(pady=5)

to_currency_var = ctk.StringVar(value="UAH")
to_currency_menu = ctk.CTkOptionMenu(app, variable=to_currency_var, values=["BTC", "ETH", "USDT", "UAH"])
to_currency_menu.pack(pady=5)

# –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
def convert():
    try:
        amount = float(entry_amount.get())
        from_currency = from_currency_var.get()
        to_currency = to_currency_var.get()
        rates = get_exchange_rates()

        amount_in_uah = amount * rates[from_currency]
        converted_amount = amount_in_uah / rates[to_currency]

        result_label.configure(
            text=f"{amount} {from_currency} = {converted_amount:.4f} {to_currency}"
        )
    except ValueError:
        result_label.configure(text="‚ùå –í–≤–µ–¥–∏ —á–∏—Å–ª–æ")
    except Exception as e:
        result_label.configure(text=f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

convert_button = ctk.CTkButton(app, text="–ö–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏", command=convert)
convert_button.pack(pady=10)

# –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
result_label = ctk.CTkLabel(app, text="")
result_label.pack(pady=10)

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
app.mainloop()